🧠 What is it?

Anomaly detection means finding data points that are unusual, rare, or suspicious — for example:

    A fraudulent credit card transaction 💳

    A server suddenly behaving weirdly 🤖

    A person faking their identity in a system 🕵️

Isolation Forest is a special algorithm that detects these outliers very efficiently.
🌲 Why Isolation Forest?

    It works by isolating anomalies — since anomalies are rare and different, they are easier to separate than normal data.

    Think of it like playing 20 questions — weird data gets found faster.

    It’s fast, unsupervised (no labels needed), and scalable.

🔧 Simple Real-World Use Case:

You have 1,000 customers. One of them suddenly spends ₹5,00,000 in one day — the model flags that person as anomaly.
🧪 Basic Code Example:

from sklearn.ensemble import IsolationForest
import pandas as pd

# Sample data (normal + 1 anomaly)
data = [[20], [22], [21], [19], [25], [100]]  # 100 is an anomaly
df = pd.DataFrame(data, columns=["Value"])

# Train Isolation Forest
model = IsolationForest(contamination=0.1)  # Expect ~10% outliers
model.fit(df)

# Predict anomalies (-1 means anomaly)
df["anomaly"] = model.predict(df)
print(df)

Output will look like:

   Value  anomaly
0     20        1
1     22        1
2     21        1
3     19        1
4     25        1
5    100       -1   👈 Anomaly detected!

📊 Use Cases:

    Fraud detection 💰

    Network security intrusion detection 🔐

    Medical diagnostics 🧑‍⚕️

    Industrial sensor fault detection ⚙️